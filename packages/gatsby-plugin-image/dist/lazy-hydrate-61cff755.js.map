{"version":3,"file":"lazy-hydrate-61cff755.js","sources":["../src/components/picture.tsx","../src/components/placeholder.tsx","../src/components/main-image.tsx","../src/components/lazy-hydrate.tsx"],"sourcesContent":["/* eslint-disable filenames/match-regex */\nimport React, {\n  FunctionComponent,\n  ImgHTMLAttributes,\n  forwardRef,\n  LegacyRef,\n} from \"react\"\nimport * as PropTypes from \"prop-types\"\n\nexport interface IResponsiveImageProps {\n  sizes?: string\n  srcSet: string\n}\n\nexport type SourceProps = IResponsiveImageProps &\n  (\n    | {\n        media: string\n        type?: string\n      }\n    | {\n        media?: string\n        type: string\n      }\n  )\n\ntype FallbackProps = { src: string } & Partial<IResponsiveImageProps>\n\ntype ImageProps = ImgHTMLAttributes<HTMLImageElement> & {\n  src: string\n  alt: string\n  shouldLoad: boolean\n  innerRef: LegacyRef<HTMLImageElement>\n}\n\nexport type PictureProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: FallbackProps\n  sources?: Array<SourceProps>\n  alt: string\n  shouldLoad?: boolean\n}\n\nconst Image: FunctionComponent<ImageProps> = function Image({\n  src,\n  srcSet,\n  loading,\n  alt = ``,\n  shouldLoad,\n  innerRef,\n  ...props\n}) {\n  return (\n    <img\n      {...props}\n      decoding=\"async\"\n      loading={loading}\n      src={shouldLoad ? src : undefined}\n      data-src={!shouldLoad ? src : undefined}\n      srcSet={shouldLoad ? srcSet : undefined}\n      data-srcset={!shouldLoad ? srcSet : undefined}\n      alt={alt}\n      ref={innerRef}\n    />\n  )\n}\n\nexport const Picture = forwardRef<HTMLImageElement, PictureProps>(\n  function Picture(\n    { fallback, sources = [], shouldLoad = true, sizes, ...props },\n    ref\n  ) {\n    const fallbackImage = (\n      <Image\n        sizes={sizes}\n        {...props}\n        {...fallback}\n        shouldLoad={shouldLoad}\n        innerRef={ref}\n      />\n    )\n\n    if (!sources.length) {\n      return fallbackImage\n    }\n\n    return (\n      <picture>\n        {sources.map(({ media, srcSet, type }) => (\n          <source\n            key={`${media}-${type}-${srcSet}`}\n            type={type}\n            media={media}\n            srcSet={srcSet}\n            sizes={sizes}\n          />\n        ))}\n        {fallbackImage}\n      </picture>\n    )\n  }\n)\n\nImage.propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n  sizes: PropTypes.string,\n  srcSet: PropTypes.string,\n  shouldLoad: PropTypes.bool,\n}\n\nPicture.displayName = `Picture`\nPicture.propTypes = {\n  alt: PropTypes.string.isRequired,\n  shouldLoad: PropTypes.bool,\n  fallback: PropTypes.exact({\n    src: PropTypes.string.isRequired,\n    srcSet: PropTypes.string,\n    sizes: PropTypes.string,\n  }),\n  sources: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.exact({\n        media: PropTypes.string.isRequired,\n        type: PropTypes.string,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n      PropTypes.exact({\n        media: PropTypes.string,\n        type: PropTypes.string.isRequired,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n    ])\n  ),\n}\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\nimport { Picture, SourceProps } from \"./picture\"\n\nexport type PlaceholderProps = ImgHTMLAttributes<{}> & {\n  fallback?: string\n  sources?: Array<SourceProps>\n}\n\nexport const Placeholder: FunctionComponent<PlaceholderProps> = function Placeholder({\n  fallback,\n  ...props\n}) {\n  if (fallback) {\n    return (\n      <Picture\n        {...props}\n        fallback={{\n          src: fallback,\n        }}\n        aria-hidden\n        alt=\"\"\n      />\n    )\n  } else {\n    return <div {...props}></div>\n  }\n}\n\nPlaceholder.displayName = `Placeholder`\nPlaceholder.propTypes = {\n  fallback: PropTypes.string,\n  sources: Picture.propTypes?.sources,\n  alt: function (props, propName, componentName): Error | null {\n    if (!props[propName]) {\n      return null\n    }\n    return new Error(\n      `Invalid prop \\`${propName}\\` supplied to \\`${componentName}\\`. Validation failed.`\n    )\n  },\n}\n","import React, { forwardRef } from \"react\"\nimport { Picture, PictureProps } from \"./picture\"\n\nexport type MainImageProps = PictureProps\n\nexport const MainImage = forwardRef<HTMLImageElement, MainImageProps>(\n  function MainImage({ ...props }, ref) {\n    return (\n      <>\n        {props.loading === `eager` && (\n          <link\n            rel=\"preload\"\n            as=\"image\"\n            href={props.fallback.src}\n            // TODO: remove this if imagesrcset is added to the types\n            // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n            // @ts-ignore\n            imagesrcset={props.fallback.srcSet}\n            imagesizes={props.fallback.sizes}\n          />\n        )}\n        <Picture ref={ref} {...props} />\n        <noscript>\n          <Picture {...props} shouldLoad={true} />\n        </noscript>\n      </>\n    )\n  }\n)\n\nMainImage.displayName = `MainImage`\nMainImage.propTypes = Picture.propTypes\n","import React, { MutableRefObject } from \"react\"\nimport { hydrate, render } from \"react-dom\"\nimport { GatsbyImageProps } from \"./gatsby-image.browser\"\nimport { LayoutWrapper } from \"./layout-wrapper\"\nimport { Placeholder } from \"./placeholder\"\nimport { MainImageProps, MainImage } from \"./main-image\"\nimport {\n  getMainProps,\n  getPlaceholderProps,\n  hasNativeLazyLoadSupport,\n  hasImageLoaded,\n} from \"./hooks\"\nimport { ReactElement } from \"react\"\n\ntype LazyHydrateProps = Omit<GatsbyImageProps, \"as\" | \"style\" | \"className\"> & {\n  isLoading: boolean\n  isLoaded: boolean // alwaystype SetStateAction<S> = S | ((prevState: S) => S);\n  toggleIsLoaded: Function\n  ref: MutableRefObject<HTMLImageElement | undefined>\n}\n\nexport function lazyHydrate(\n  {\n    image,\n    loading,\n    isLoading,\n    isLoaded,\n    toggleIsLoaded,\n    ref,\n    imgClassName,\n    imgStyle = {},\n    objectPosition,\n    backgroundColor,\n    objectFit = `cover`,\n    ...props\n  }: LazyHydrateProps,\n  root: MutableRefObject<HTMLElement | undefined>,\n  hydrated: MutableRefObject<boolean>\n): (() => void) | null {\n  const {\n    width,\n    height,\n    layout,\n    images,\n    placeholder,\n    backgroundColor: wrapperBackgroundColor,\n  } = image\n\n  if (!root.current) {\n    return null\n  }\n\n  const hasSSRHtml = root.current.querySelector(`[data-gatsby-image-ssr]`)\n  // On first server hydration do nothing\n  if (hasNativeLazyLoadSupport() && hasSSRHtml && !hydrated.current) {\n    return null\n  }\n\n  const cacheKey = JSON.stringify(images)\n  const hasLoaded = !hydrated.current && hasImageLoaded(cacheKey)\n\n  imgStyle = {\n    objectFit,\n    objectPosition,\n    backgroundColor,\n    ...imgStyle,\n  }\n\n  const component = (\n    <LayoutWrapper layout={layout} width={width} height={height}>\n      {!hasLoaded && (\n        <Placeholder\n          {...getPlaceholderProps(\n            placeholder,\n            isLoaded,\n            layout,\n            width,\n            height,\n            wrapperBackgroundColor\n          )}\n        />\n      )}\n      <MainImage\n        {...(props as Omit<MainImageProps, \"images\" | \"fallback\">)}\n        className={imgClassName}\n        {...getMainProps(\n          isLoading,\n          hasLoaded || isLoaded,\n          images,\n          loading,\n          toggleIsLoaded,\n          cacheKey,\n          ref,\n          imgStyle\n        )}\n      />\n    </LayoutWrapper>\n  )\n\n  const doRender = hydrated.current ? render : hydrate\n  doRender(component, root.current)\n  hydrated.current = true\n\n  return (): void => {\n    if (root.current) {\n      render((null as unknown) as ReactElement, root.current)\n    }\n  }\n}\n"],"names":["Image","src","srcSet","loading","alt","shouldLoad","innerRef","props","React","decoding","undefined","ref","Picture","forwardRef","fallback","sources","sizes","fallbackImage","length","map","media","type","key","propTypes","PropTypes","isRequired","displayName","Placeholder","_Picture$propTypes","propName","componentName","Error","MainImage","rel","as","href","imagesrcset","imagesizes","root","hydrated","image","isLoading","isLoaded","toggleIsLoaded","imgClassName","imgStyle","objectPosition","backgroundColor","objectFit","width","height","layout","images","placeholder","wrapperBackgroundColor","current","hasSSRHtml","querySelector","hasNativeLazyLoadSupport","cacheKey","JSON","stringify","hasLoaded","hasImageLoaded","component","LayoutWrapper","getPlaceholderProps","className","getMainProps","render","hydrate"],"mappings":"2KA0CMA,EAAuC,gBAC3CC,IAAAA,IACAC,IAAAA,OACAC,IAAAA,YACAC,IAAAA,kBACAC,IAAAA,WACAC,IAAAA,SACGC,8FAEH,OACEC,uCACMD,GACJE,SAAS,QACTN,QAASA,EACTF,IAAKI,EAAaJ,OAAMS,aACbL,OAAmBK,EAANT,EACxBC,OAAQG,EAAaH,OAASQ,gBAChBL,OAAsBK,EAATR,EAC3BE,IAAKA,EACLO,IAAKL,MAKEM,EAAUC,aACrB,WAEEF,OADEG,IAAAA,aAAUC,QAAAA,aAAU,SAAIV,WAAAA,gBAAmBW,IAAAA,MAAUT,iFAGjDU,EACJT,gBAACR,iBACCgB,MAAOA,GACHT,EACAO,GACJT,WAAYA,EACZC,SAAUK,KAId,OAAKI,EAAQG,OAKXV,+BACGO,EAAQI,IAAI,gBAAGC,IAAAA,MAAOlB,IAAAA,OAAQmB,IAAAA,YAC7Bb,0BACEc,IAAQF,MAASC,MAAQnB,EACzBmB,KAAMA,EACND,MAAOA,EACPlB,OAAQA,EACRc,MAAOA,MAGVC,GAdIA,IAoBbjB,EAAMuB,UAAY,CAChBtB,IAAKuB,SAAiBC,WACtBrB,IAAKoB,SAAiBC,WACtBT,MAAOQ,SACPtB,OAAQsB,SACRnB,WAAYmB,QAGdZ,EAAQc,sBACRd,EAAQW,UAAY,CAClBnB,IAAKoB,SAAiBC,WACtBpB,WAAYmB,OACZV,SAAUU,QAAgB,CACxBvB,IAAKuB,SAAiBC,WACtBvB,OAAQsB,SACRR,MAAOQ,WAETT,QAASS,UACPA,YAAoB,CAClBA,QAAgB,CACdJ,MAAOI,SAAiBC,WACxBJ,KAAMG,SACNR,MAAOQ,SACPtB,OAAQsB,SAAiBC,aAE3BD,QAAgB,CACdJ,MAAOI,SACPH,KAAMG,SAAiBC,WACvBT,MAAOQ,SACPtB,OAAQsB,SAAiBC,qBC1HpBE,EAAmD,gBAC9Db,IAAAA,SACGP,kDAEH,OAAIO,EAEAN,gBAACI,mBACKL,GACJO,SAAU,CACRb,IAAKa,oBAGPV,IAAI,MAIDI,uCAASD,KAIpBoB,EAAYD,0BACZC,EAAYJ,UAAY,CACtBT,SAAUU,SACVT,iBAASH,EAAQW,kBAARK,EAAmBb,QAC5BX,IAAK,SAAUG,EAAOsB,EAAUC,GAC9B,OAAKvB,EAAMsB,OAGAE,uBACSF,oBAA4BC,sCCjCvCE,EAAYnB,aACvB,WAAiCF,OAATJ,mBACtB,OACEC,0CACGD,EAAMJ,SACLK,wBACEyB,IAAI,UACJC,GAAG,QACHC,KAAM5B,EAAMO,SAASb,IAIrBmC,YAAa7B,EAAMO,SAASZ,OAC5BmC,WAAY9B,EAAMO,SAASE,QAG/BR,gBAACI,iBAAQD,IAAKA,GAASJ,IACvBC,gCACEA,gBAACI,mBAAYL,GAAOF,YAAY,SAO1C2B,EAAUN,wBACVM,EAAUT,UAAYX,EAAQW,yCCK5Be,EACAC,OAdEC,IAAAA,MACArC,IAAAA,QACAsC,IAAAA,UACAC,IAAAA,SACAC,IAAAA,eACAhC,IAAAA,IACAiC,IAAAA,iBACAC,SAAAA,aAAW,KACXC,IAAAA,eACAC,IAAAA,oBACAC,UAAAA,uBACGzC,gLAMH0C,EAMET,EANFS,MACAC,EAKEV,EALFU,OACAC,EAIEX,EAJFW,OACAC,EAGEZ,EAHFY,OACAC,EAEEb,EAFFa,YACiBC,EACfd,EADFO,gBAGF,IAAKT,EAAKiB,QACR,YAGF,IAAMC,EAAalB,EAAKiB,QAAQE,yCAEhC,GAAIC,8BAA8BF,IAAejB,EAASgB,QACxD,YAGF,IAAMI,EAAWC,KAAKC,UAAUT,GAC1BU,GAAavB,EAASgB,SAAWQ,iBAAeJ,GAEtDd,cACEG,UAAAA,EACAF,eAAAA,EACAC,gBAAAA,GACGF,GAGL,IAAMmB,EACJxD,gBAACyD,iBAAcd,OAAQA,EAAQF,MAAOA,EAAOC,OAAQA,IACjDY,GACAtD,gBAACmB,mBACKuC,sBACFb,EACAX,EACAS,EACAF,EACAC,EACAI,KAIN9C,gBAACwB,mBACMzB,GACL4D,UAAWvB,GACPwB,eACF3B,EACAqB,GAAapB,EACbU,EACAjD,EACAwC,EACAgB,EACAhD,EACAkC,MAUR,OAJiBN,EAASgB,QAAUc,SAASC,WACpCN,EAAW1B,EAAKiB,SACzBhB,EAASgB,SAAU,aAGbjB,EAAKiB,SACPc,SAAQ,KAAkC/B,EAAKiB"}